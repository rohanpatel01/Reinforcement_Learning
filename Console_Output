Starting Training
layer weights:  Parameter containing:
tensor([[-1.2775e-01, -3.0249e-02, -1.5656e-01, -1.9802e-01, -1.9161e-01,
         -9.0948e-02,  6.4927e-02,  2.7891e-02, -1.2490e-01,  1.1415e-01,
          7.5541e-02, -1.1941e-01, -1.2607e-01, -4.8189e-02,  8.2985e-02,
          1.8232e-01,  6.5936e-02, -1.4763e-01,  1.0418e-01, -7.0717e-02,
          9.3695e-02,  6.2944e-02, -8.2764e-02,  7.2417e-02,  9.9668e-02],
        [ 8.2059e-02, -1.9660e-01,  9.1597e-02,  5.2375e-02,  3.8630e-02,
          1.3177e-01, -7.2477e-02,  1.4360e-01, -1.9945e-01,  1.0612e-01,
          7.5758e-02, -9.5015e-03,  1.1359e-01,  1.1056e-01,  1.6356e-01,
          7.2126e-02, -1.3618e-01, -1.1223e-01, -8.6351e-03,  1.9526e-01,
         -1.9695e-01, -1.9224e-01,  1.8181e-01,  6.9350e-02, -1.8012e-01],
        [-1.7060e-01,  1.4912e-01,  1.8465e-01,  1.8331e-01,  2.0805e-02,
          1.5286e-01,  1.6188e-01, -3.0005e-02,  1.7106e-01,  1.6481e-01,
          1.9240e-01, -1.1614e-01, -9.1423e-02, -9.0415e-02,  3.8559e-02,
          1.6119e-04,  8.8415e-02,  1.6666e-01,  2.8015e-02,  3.4172e-02,
          1.8959e-01,  1.8920e-01,  3.3357e-02, -1.4186e-01, -4.5480e-02]],
       dtype=torch.float64, requires_grad=True)
layer weights:  Parameter containing:
tensor([[ 0.1104,  0.1481, -0.1835,  0.1399, -0.0792,  0.1575,  0.1487,  0.1524,
         -0.0204,  0.0113, -0.0063, -0.1094,  0.0610, -0.0304, -0.0512, -0.1146,
         -0.1438,  0.0935, -0.0811, -0.0150,  0.1612, -0.1149, -0.0805, -0.1723,
          0.1076],
        [ 0.0458, -0.0848,  0.1182, -0.1101,  0.0565,  0.0735, -0.0046,  0.0183,
          0.0270,  0.1484,  0.0665,  0.0951, -0.0544, -0.0318,  0.0998, -0.1633,
         -0.0502, -0.0412,  0.0183, -0.1199,  0.1763,  0.1715,  0.0263,  0.1103,
         -0.0643],
        [ 0.0873,  0.1417,  0.0036, -0.0615, -0.1911, -0.1774, -0.1459, -0.0620,
          0.0934,  0.1763,  0.1556, -0.0305, -0.1144,  0.0700, -0.1566, -0.1005,
         -0.0957,  0.0604,  0.1369,  0.0656,  0.0433,  0.1390,  0.0254, -0.0548,
         -0.1847]], dtype=torch.float64, requires_grad=True)
Summary AFTER training

==============================================
Summary: 
State	Action	Next State	Reward
0 		 0 		  Q(s,a)=  tensor(0.6524, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 1 		  Q(s,a)=  tensor(0.5675, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 2 		  Q(s,a)=  tensor(0.5469, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 0 		  Q(s,a)=  tensor(0.7092, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 1 		  Q(s,a)=  tensor(0.5902, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 2 		  Q(s,a)=  tensor(0.4846, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 0 		  Q(s,a)=  tensor(0.8048, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 1 		  Q(s,a)=  tensor(0.5451, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 2 		  Q(s,a)=  tensor(0.4228, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 0 		  Q(s,a)=  tensor(0.9921, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 1 		  Q(s,a)=  tensor(0.5751, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 2 		  Q(s,a)=  tensor(0.2784, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 0 		  Q(s,a)=  tensor(1.1443, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 1 		  Q(s,a)=  tensor(0.3892, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 2 		  Q(s,a)=  tensor(0.0539, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 0 		  Q(s,a)=  tensor(1.2410, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 1 		  Q(s,a)=  tensor(0.4372, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 2 		  Q(s,a)=  tensor(0.0063, dtype=torch.float64, grad_fn=<SelectBackward0>)
==============================================

Best trajectory: 
Best trajectory from Test Environment
State:  0.04385454545454545  Action:  0  Reward Received:  0
State:  0.22596363636363642  Action:  0  Reward Received:  0
State:  0.40894545454545456  Action:  0  Reward Received:  0
State:  0.5811636363636363  Action:  0  Reward Received:  0
State:  0.7758545454545454  Action:  0  Reward Received:  1

Total Reward Received:  1
Taking a look at model parameters to see if weights are changing
Parameter containing:
tensor([[ 0.1301,  0.0519, -0.0576,  0.0270, -0.0030,  0.3441,  0.4153,  0.2288,
          0.2709,  0.0725,  0.0324, -0.1427, -0.1094,  0.2448,  0.0695, -0.1543,
         -0.2475,  0.1416, -0.1679, -0.1101,  0.1089, -0.2970,  0.0229, -0.3890,
          0.2283],
        [ 0.0557, -0.2500, -0.2298, -0.2963, -0.1491,  0.1331, -0.1091, -0.2180,
         -0.3851,  0.4809,  0.1722,  0.0123,  0.0332, -0.3474,  0.2308, -0.0479,
          0.0431,  0.0928,  0.1685,  0.0078,  0.2150,  0.2352,  0.0532,  0.2214,
         -0.3018],
        [-0.0699,  0.1261, -0.1802, -0.1307, -0.3108, -0.1568, -0.4606, -0.3532,
         -0.2105,  0.4712,  0.3481, -0.0180,  0.0543, -0.3679, -0.0935, -0.0465,
         -0.0754,  0.1664,  0.2952,  0.2655, -0.0013,  0.2532,  0.1157,  0.2131,
         -0.4443]], dtype=torch.float64, requires_grad=True)
Parameter containing:
tensor([0.5477, 0.6096, 0.5959], dtype=torch.float64, requires_grad=True)
