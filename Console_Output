Starting Training
layer weights:  Parameter containing:
tensor([[-0.0329, -0.0829,  0.0222,  0.0729, -0.0409,  0.1738,  0.1280, -0.0929,
          0.1805,  0.1641, -0.0530,  0.1990,  0.0476, -0.1699,  0.1991, -0.0161,
         -0.0258,  0.0017, -0.1082,  0.1975, -0.1319,  0.1626,  0.0088, -0.1488,
         -0.0755],
        [-0.0167,  0.0178, -0.0328, -0.1266,  0.1894,  0.1727,  0.0793,  0.0691,
         -0.0740, -0.0166,  0.1779, -0.1349, -0.0113,  0.1786, -0.0531, -0.1973,
          0.1079,  0.0548,  0.0683, -0.0625,  0.1244, -0.1331, -0.1833, -0.1163,
          0.1757],
        [ 0.0127,  0.1778,  0.1084, -0.0385,  0.1314,  0.0324, -0.0107, -0.0829,
          0.1884, -0.0303, -0.1058, -0.0374,  0.0643,  0.1304, -0.0890, -0.0781,
          0.1423,  0.0896, -0.1188,  0.0587, -0.1948,  0.0834, -0.1931, -0.0937,
         -0.0990]], dtype=torch.float64, requires_grad=True)
layer weights:  Parameter containing:
tensor([[ 0.0363,  0.0485, -0.0691, -0.0510,  0.1416, -0.1561,  0.0660,  0.0227,
          0.0016,  0.1244,  0.0563,  0.0955,  0.1187, -0.0827, -0.0008,  0.0945,
         -0.1070, -0.0524,  0.0300, -0.1347, -0.1858,  0.0782, -0.1201, -0.0126,
         -0.0810],
        [ 0.0057,  0.0544,  0.0458,  0.1547,  0.0548, -0.1829, -0.0957, -0.0353,
         -0.0505,  0.1545,  0.1152,  0.1527, -0.0088, -0.1053,  0.0713, -0.1555,
         -0.0974,  0.0376, -0.0905,  0.1107, -0.1540, -0.0525,  0.0047, -0.1915,
         -0.0929],
        [-0.0739, -0.1558, -0.1966, -0.0157,  0.1663, -0.0431,  0.0158, -0.1249,
         -0.1847, -0.0507, -0.1637,  0.1327,  0.1702, -0.1213,  0.1149, -0.1544,
         -0.1061,  0.1759,  0.0616, -0.1989, -0.0264,  0.1957,  0.0227,  0.1291,
          0.0717]], dtype=torch.float64, requires_grad=True)
Summary AFTER training

==============================================
Summary: 
State	Action	Next State	Reward
0 		 0 		  Q(s,a)=  tensor(0.5470, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 1 		  Q(s,a)=  tensor(0.4492, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 2 		  Q(s,a)=  tensor(0.4284, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 0 		  Q(s,a)=  tensor(0.6508, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 1 		  Q(s,a)=  tensor(0.4335, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 2 		  Q(s,a)=  tensor(0.4682, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 0 		  Q(s,a)=  tensor(0.7977, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 1 		  Q(s,a)=  tensor(0.4295, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 2 		  Q(s,a)=  tensor(0.4926, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 0 		  Q(s,a)=  tensor(1.0492, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 1 		  Q(s,a)=  tensor(0.3482, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 2 		  Q(s,a)=  tensor(0.5349, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 0 		  Q(s,a)=  tensor(1.2717, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 1 		  Q(s,a)=  tensor(0.2151, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 2 		  Q(s,a)=  tensor(0.3484, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 0 		  Q(s,a)=  tensor(1.4356, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 1 		  Q(s,a)=  tensor(0.2238, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 2 		  Q(s,a)=  tensor(0.4114, dtype=torch.float64, grad_fn=<SelectBackward0>)
==============================================

Best trajectory: 
Best trajectory from Test Environment
State:  0.044436363636363635  Action:  0  Reward Received:  0
State:  0.22661818181818183  Action:  0  Reward Received:  0
State:  0.40450909090909093  Action:  0  Reward Received:  0
State:  0.5826909090909091  Action:  0  Reward Received:  0
State:  0.7705454545454544  Action:  0  Reward Received:  1

Total Reward Received:  1
Taking a look at model parameters to see if weights are changing
Parameter containing:
tensor([[-0.0699,  0.3371, -0.2118,  0.1094,  0.1312, -0.0350,  0.1787,  0.1855,
          0.0077,  0.2738,  0.2658,  0.1194,  0.0535, -0.1120,  0.1421, -0.0630,
         -0.4125,  0.2859,  0.1779,  0.0992, -0.2657,  0.1796,  0.0525, -0.1892,
         -0.2231],
        [ 0.2954, -0.3450,  0.5362, -0.0777,  0.1059, -0.1976, -0.0823, -0.1604,
         -0.1473,  0.0969, -0.0793,  0.1564,  0.0774, -0.1840, -0.1718,  0.0236,
          0.2240, -0.1908, -0.1251, -0.0742,  0.0319,  0.1593, -0.2670,  0.0207,
          0.1397],
        [ 0.1474, -0.6696,  0.3382, -0.3229,  0.4101,  0.0931,  0.0662, -0.0682,
         -0.1688,  0.0166, -0.3394,  0.0219,  0.2056, -0.3895, -0.0911, -0.0043,
          0.2353, -0.0503, -0.0941, -0.3784,  0.2569,  0.5228, -0.2953,  0.2975,
          0.2837]], dtype=torch.float64, requires_grad=True)
Parameter containing:
tensor([0.4467, 0.4473, 0.4166], dtype=torch.float64, requires_grad=True)
