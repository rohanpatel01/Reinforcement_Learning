Starting Training
layer weights:  Parameter containing:
tensor([[ 0.0716,  0.0177,  0.0106, -0.1404, -0.0752,  0.0097, -0.1257, -0.0051,
         -0.0885,  0.0767, -0.1397, -0.0615,  0.0779,  0.0126, -0.1542, -0.0397,
          0.1737, -0.0630,  0.1168,  0.0428,  0.0211, -0.0221, -0.0764,  0.0619,
          0.0411],
        [ 0.0677, -0.1383,  0.1408, -0.1610, -0.0595,  0.1025, -0.0927, -0.0363,
         -0.1685,  0.1515, -0.1376,  0.0512,  0.0050, -0.1891, -0.0188, -0.1486,
         -0.0419, -0.0410,  0.1407, -0.1026, -0.0764, -0.0827,  0.0548,  0.1541,
         -0.0239],
        [ 0.1936, -0.0637, -0.0594,  0.0159, -0.1358, -0.0257,  0.1379, -0.1765,
         -0.1894, -0.0642, -0.0550,  0.1829, -0.1414,  0.0657,  0.1990,  0.0767,
         -0.1113,  0.0750, -0.0487,  0.0397, -0.0283,  0.1309,  0.1105, -0.0040,
         -0.1600]], dtype=torch.float64, requires_grad=True)
layer weights:  Parameter containing:
tensor([[ 0.0074,  0.1176, -0.1052,  0.1062, -0.0376,  0.0271, -0.1612, -0.1750,
         -0.0407,  0.0472,  0.0803,  0.0923,  0.0108,  0.0902,  0.0466, -0.1042,
          0.1979,  0.0366, -0.0449,  0.1290, -0.0280,  0.1270,  0.1388,  0.1625,
          0.1126],
        [-0.0595,  0.1848, -0.1945,  0.1989,  0.1396,  0.1761, -0.0050,  0.0870,
          0.1576,  0.0710, -0.0881, -0.0899,  0.1630,  0.1579, -0.0821,  0.0380,
          0.1968,  0.1283, -0.0310,  0.0924,  0.1530,  0.0712,  0.1405, -0.0176,
          0.0149],
        [ 0.0377,  0.0262, -0.1595,  0.1320,  0.0440, -0.1783,  0.0047,  0.1174,
          0.1113, -0.1867,  0.0060,  0.0022,  0.0749, -0.0680, -0.0330,  0.0839,
          0.0624, -0.1662, -0.1479, -0.0326, -0.0245, -0.0314,  0.0415, -0.1161,
          0.0138]], dtype=torch.float64, requires_grad=True)
Summary AFTER training

==============================================
Summary: 
State	Action	Next State	Reward
0 		 0 		  Q(s,a)=  tensor(0.7175, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 1 		  Q(s,a)=  tensor(0.5446, dtype=torch.float64, grad_fn=<SelectBackward0>)
0 		 2 		  Q(s,a)=  tensor(0.5727, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 0 		  Q(s,a)=  tensor(0.8260, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 1 		  Q(s,a)=  tensor(0.4625, dtype=torch.float64, grad_fn=<SelectBackward0>)
1 		 2 		  Q(s,a)=  tensor(0.6784, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 0 		  Q(s,a)=  tensor(0.9505, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 1 		  Q(s,a)=  tensor(0.4746, dtype=torch.float64, grad_fn=<SelectBackward0>)
2 		 2 		  Q(s,a)=  tensor(0.7286, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 0 		  Q(s,a)=  tensor(1.0980, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 1 		  Q(s,a)=  tensor(0.3373, dtype=torch.float64, grad_fn=<SelectBackward0>)
3 		 2 		  Q(s,a)=  tensor(0.7864, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 0 		  Q(s,a)=  tensor(1.2705, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 1 		  Q(s,a)=  tensor(0.1575, dtype=torch.float64, grad_fn=<SelectBackward0>)
4 		 2 		  Q(s,a)=  tensor(0.7100, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 0 		  Q(s,a)=  tensor(1.4532, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 1 		  Q(s,a)=  tensor(0.1367, dtype=torch.float64, grad_fn=<SelectBackward0>)
5 		 2 		  Q(s,a)=  tensor(0.7938, dtype=torch.float64, grad_fn=<SelectBackward0>)
==============================================

Best trajectory: 
Best trajectory from Test Environment
State:  0.04814545454545455  Action:  0  Reward Received:  0
State:  0.2282181818181818  Action:  0  Reward Received:  0
State:  0.39767272727272723  Action:  0  Reward Received:  0
State:  0.5876363636363636  Action:  0  Reward Received:  0
State:  0.7628363636363636  Action:  0  Reward Received:  1

Total Reward Received:  1
Taking a look at model parameters to see if weights are changing
Parameter containing:
tensor([[ 0.0912,  0.0774, -0.0314,  0.1156, -0.0367,  0.0294, -0.0421, -0.2884,
          0.0476,  0.0498,  0.0393,  0.0582,  0.0988,  0.2284,  0.1467, -0.2021,
          0.1663,  0.0505, -0.0218, -0.0387, -0.0017, -0.0550,  0.1475,  0.3042,
         -0.0659],
        [-0.0079, -0.0965, -0.2581,  0.3813, -0.0707, -0.1655, -0.1231,  0.1677,
          0.0683, -0.0910,  0.1527, -0.1558, -0.0396, -0.0494, -0.3548, -0.1560,
          0.0854,  0.0893, -0.1956,  0.2940, -0.2502,  0.0343,  0.1723, -0.0719,
          0.1581],
        [ 0.1079, -0.0706, -0.0669,  0.3902,  0.0358, -0.4300,  0.0760,  0.1984,
          0.1747, -0.2356,  0.2404, -0.0545, -0.0345, -0.0227, -0.1335,  0.2436,
         -0.1098, -0.0767, -0.0460,  0.1287, -0.2433, -0.0866,  0.0321,  0.0103,
          0.2095]], dtype=torch.float64, requires_grad=True)
Parameter containing:
tensor([0.6243, 0.5689, 0.5710], dtype=torch.float64, requires_grad=True)
